server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"

#  datasource:
#    url: jdbc:mysql://localhost:3306/accountsdb
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  jpa:
#    show-sql: true
#  sql:
#    init:
#      mode: always # Tự tạo db từ file schema.sql
#  config:
#    import: "optional:configserver:http://localhost:8071/"

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
    kafka:
      binder:
        brokers:
          - localhost:9092
#  rabbitmq:
#    host: localhost
#    port: 5672
#    password: guest
#    connection-timeout: 10s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      applications: ${spring.application.name}
endpoints:
  shutdown:
    enable: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Eazy Bank Accounts applications"
    version: "1.0"  # Thong tin cho eureka dashboard

logging:
  level:
    com:
      eazybytes:
        accounts: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      accountsCircuitBreaker:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10s

  ratelimiter:
    configs:
      default:
        timeout-duration: 1000
        limit-for-period: 5000
        limit-refresh-period: 1

  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 100
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
#        ignore-exceptions: không kích hoạt retry
#          - java.lang.NullPointerException  # khi nào có retry timeout thif không cần cái này
        retry-exceptions: # Danh sách ngoại lệ sẽ kích hoạt retry
          - java.util.concurrent.TimeoutException

#optional: Không bắt buộc, tức là ứng dụng vẫn chạy nếu Config Server không khả dụng.
#configserver: Chỉ rõ rằng cấu hình đang được lấy từ Spring Cloud Config Server.
#http://localhost:8071/: Địa chỉ của Config Server.

#  config:
#    import:
#      - "application_qa.yml"
#      - "application_prod.yml"
#  profiles:
#   active:
#     - "qa"
#
#build:
#  version: "3.0"
#
#accounts:
#  message: "Welcome to EazyBank accounts related local APIs"
#  contactDetails:
#    name: "Dang-Dev"
#    email: "dangdev@gmail.com"
#  onCallSupport:
#    -(555) 555-1234